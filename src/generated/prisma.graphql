# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Activity implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  desc: String
  type: ActivityType!
  status: ProcessStatus
  startedAt: DateTime!
  endedAt: DateTime!
  location: String!
  creator(where: UserWhereInput): User!
  participants(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User!]
  tasks(where: ActivityTaskWhereInput, orderBy: ActivityTaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ActivityTask!]
}

type ActivityTask implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  desc: String
  status: ProcessStatus
  endedAt: DateTime
  activity(where: ActivityWhereInput): Activity
  assignee(where: UserWhereInput): User
}

type Post implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  text: String!
  author(where: UserWhereInput): User!
}

type Recipe implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  creator(where: UserWhereInput): User!
  time: Int
  desc: String
  avatar: String
}

type Tag implements Node {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  creator(where: UserWhereInput): User!
  category: TagCategory!
  default: Boolean
  recipes(where: RecipeWhereInput, orderBy: RecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Recipe!]
}

type User implements Node {
  id: ID!
  email: String!
  password: String!
  name: String!
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post!]
  myActivities(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity!]
  myTasks(where: ActivityTaskWhereInput, orderBy: ActivityTaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ActivityTask!]
  myRecipes(where: RecipeWhereInput, orderBy: RecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Recipe!]
  myTags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag!]
  attendedActivities(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity!]
  avatar: String
}


#
# Other Types
#

"""
A connection to a list of items.
"""
type ActivityConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ActivityEdge]!
  aggregate: AggregateActivity!
}

input ActivityCreateInput {
  title: String!
  desc: String
  type: ActivityType!
  status: ProcessStatus
  startedAt: DateTime!
  endedAt: DateTime!
  location: String!
  creator: UserCreateOneWithoutMyActivitiesInput!
  participants: UserCreateManyWithoutAttendedActivitiesInput
  tasks: ActivityTaskCreateManyWithoutActivityInput
}

input ActivityCreateManyWithoutCreatorInput {
  create: [ActivityCreateWithoutCreatorInput!]
  connect: [ActivityWhereUniqueInput!]
}

input ActivityCreateManyWithoutParticipantsInput {
  create: [ActivityCreateWithoutParticipantsInput!]
  connect: [ActivityWhereUniqueInput!]
}

input ActivityCreateOneWithoutTasksInput {
  create: ActivityCreateWithoutTasksInput
  connect: ActivityWhereUniqueInput
}

input ActivityCreateWithoutCreatorInput {
  title: String!
  desc: String
  type: ActivityType!
  status: ProcessStatus
  startedAt: DateTime!
  endedAt: DateTime!
  location: String!
  participants: UserCreateManyWithoutAttendedActivitiesInput
  tasks: ActivityTaskCreateManyWithoutActivityInput
}

input ActivityCreateWithoutParticipantsInput {
  title: String!
  desc: String
  type: ActivityType!
  status: ProcessStatus
  startedAt: DateTime!
  endedAt: DateTime!
  location: String!
  creator: UserCreateOneWithoutMyActivitiesInput!
  tasks: ActivityTaskCreateManyWithoutActivityInput
}

input ActivityCreateWithoutTasksInput {
  title: String!
  desc: String
  type: ActivityType!
  status: ProcessStatus
  startedAt: DateTime!
  endedAt: DateTime!
  location: String!
  creator: UserCreateOneWithoutMyActivitiesInput!
  participants: UserCreateManyWithoutAttendedActivitiesInput
}

"""
An edge in a connection.
"""
type ActivityEdge {
  """
  The item at the end of the edge.
  """
  node: Activity!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ActivityOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  title_ASC
  title_DESC
  desc_ASC
  desc_DESC
  type_ASC
  type_DESC
  status_ASC
  status_DESC
  startedAt_ASC
  startedAt_DESC
  endedAt_ASC
  endedAt_DESC
  location_ASC
  location_DESC
}

type ActivityPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  desc: String
  type: ActivityType!
  status: ProcessStatus
  startedAt: DateTime!
  endedAt: DateTime!
  location: String!
}

type ActivitySubscriptionPayload {
  mutation: MutationType!
  node: Activity
  updatedFields: [String!]
  previousValues: ActivityPreviousValues
}

input ActivitySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ActivitySubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ActivitySubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ActivityWhereInput
}

"""
A connection to a list of items.
"""
type ActivityTaskConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [ActivityTaskEdge]!
  aggregate: AggregateActivityTask!
}

input ActivityTaskCreateInput {
  name: String!
  desc: String
  status: ProcessStatus
  endedAt: DateTime
  activity: ActivityCreateOneWithoutTasksInput
  assignee: UserCreateOneWithoutMyTasksInput
}

input ActivityTaskCreateManyWithoutActivityInput {
  create: [ActivityTaskCreateWithoutActivityInput!]
  connect: [ActivityTaskWhereUniqueInput!]
}

input ActivityTaskCreateManyWithoutAssigneeInput {
  create: [ActivityTaskCreateWithoutAssigneeInput!]
  connect: [ActivityTaskWhereUniqueInput!]
}

input ActivityTaskCreateWithoutActivityInput {
  name: String!
  desc: String
  status: ProcessStatus
  endedAt: DateTime
  assignee: UserCreateOneWithoutMyTasksInput
}

input ActivityTaskCreateWithoutAssigneeInput {
  name: String!
  desc: String
  status: ProcessStatus
  endedAt: DateTime
  activity: ActivityCreateOneWithoutTasksInput
}

"""
An edge in a connection.
"""
type ActivityTaskEdge {
  """
  The item at the end of the edge.
  """
  node: ActivityTask!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum ActivityTaskOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  desc_ASC
  desc_DESC
  status_ASC
  status_DESC
  endedAt_ASC
  endedAt_DESC
}

type ActivityTaskPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  desc: String
  status: ProcessStatus
  endedAt: DateTime
}

type ActivityTaskSubscriptionPayload {
  mutation: MutationType!
  node: ActivityTask
  updatedFields: [String!]
  previousValues: ActivityTaskPreviousValues
}

input ActivityTaskSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ActivityTaskSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ActivityTaskSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: ActivityTaskWhereInput
}

input ActivityTaskUpdateInput {
  name: String
  desc: String
  status: ProcessStatus
  endedAt: DateTime
  activity: ActivityUpdateOneWithoutTasksInput
  assignee: UserUpdateOneWithoutMyTasksInput
}

input ActivityTaskUpdateManyWithoutActivityInput {
  create: [ActivityTaskCreateWithoutActivityInput!]
  connect: [ActivityTaskWhereUniqueInput!]
  disconnect: [ActivityTaskWhereUniqueInput!]
  delete: [ActivityTaskWhereUniqueInput!]
  update: [ActivityTaskUpdateWithWhereUniqueWithoutActivityInput!]
  upsert: [ActivityTaskUpsertWithWhereUniqueWithoutActivityInput!]
}

input ActivityTaskUpdateManyWithoutAssigneeInput {
  create: [ActivityTaskCreateWithoutAssigneeInput!]
  connect: [ActivityTaskWhereUniqueInput!]
  disconnect: [ActivityTaskWhereUniqueInput!]
  delete: [ActivityTaskWhereUniqueInput!]
  update: [ActivityTaskUpdateWithWhereUniqueWithoutAssigneeInput!]
  upsert: [ActivityTaskUpsertWithWhereUniqueWithoutAssigneeInput!]
}

input ActivityTaskUpdateWithoutActivityDataInput {
  name: String
  desc: String
  status: ProcessStatus
  endedAt: DateTime
  assignee: UserUpdateOneWithoutMyTasksInput
}

input ActivityTaskUpdateWithoutAssigneeDataInput {
  name: String
  desc: String
  status: ProcessStatus
  endedAt: DateTime
  activity: ActivityUpdateOneWithoutTasksInput
}

input ActivityTaskUpdateWithWhereUniqueWithoutActivityInput {
  where: ActivityTaskWhereUniqueInput!
  data: ActivityTaskUpdateWithoutActivityDataInput!
}

input ActivityTaskUpdateWithWhereUniqueWithoutAssigneeInput {
  where: ActivityTaskWhereUniqueInput!
  data: ActivityTaskUpdateWithoutAssigneeDataInput!
}

input ActivityTaskUpsertWithWhereUniqueWithoutActivityInput {
  where: ActivityTaskWhereUniqueInput!
  update: ActivityTaskUpdateWithoutActivityDataInput!
  create: ActivityTaskCreateWithoutActivityInput!
}

input ActivityTaskUpsertWithWhereUniqueWithoutAssigneeInput {
  where: ActivityTaskWhereUniqueInput!
  update: ActivityTaskUpdateWithoutAssigneeDataInput!
  create: ActivityTaskCreateWithoutAssigneeInput!
}

input ActivityTaskWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ActivityTaskWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ActivityTaskWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  desc: String
  """
  All values that are not equal to given value.
  """
  desc_not: String
  """
  All values that are contained in given list.
  """
  desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  desc_not_in: [String!]
  """
  All values less than the given value.
  """
  desc_lt: String
  """
  All values less than or equal the given value.
  """
  desc_lte: String
  """
  All values greater than the given value.
  """
  desc_gt: String
  """
  All values greater than or equal the given value.
  """
  desc_gte: String
  """
  All values containing the given string.
  """
  desc_contains: String
  """
  All values not containing the given string.
  """
  desc_not_contains: String
  """
  All values starting with the given string.
  """
  desc_starts_with: String
  """
  All values not starting with the given string.
  """
  desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  desc_ends_with: String
  """
  All values not ending with the given string.
  """
  desc_not_ends_with: String
  status: ProcessStatus
  """
  All values that are not equal to given value.
  """
  status_not: ProcessStatus
  """
  All values that are contained in given list.
  """
  status_in: [ProcessStatus!]
  """
  All values that are not contained in given list.
  """
  status_not_in: [ProcessStatus!]
  endedAt: DateTime
  """
  All values that are not equal to given value.
  """
  endedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  endedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  endedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  endedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  endedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  endedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  endedAt_gte: DateTime
  activity: ActivityWhereInput
  assignee: UserWhereInput
}

input ActivityTaskWhereUniqueInput {
  id: ID
}

enum ActivityType {
  HOST
  TASK
  POTLUCK
}

input ActivityUpdateInput {
  title: String
  desc: String
  type: ActivityType
  status: ProcessStatus
  startedAt: DateTime
  endedAt: DateTime
  location: String
  creator: UserUpdateOneWithoutMyActivitiesInput
  participants: UserUpdateManyWithoutAttendedActivitiesInput
  tasks: ActivityTaskUpdateManyWithoutActivityInput
}

input ActivityUpdateManyWithoutCreatorInput {
  create: [ActivityCreateWithoutCreatorInput!]
  connect: [ActivityWhereUniqueInput!]
  disconnect: [ActivityWhereUniqueInput!]
  delete: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutCreatorInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutCreatorInput!]
}

input ActivityUpdateManyWithoutParticipantsInput {
  create: [ActivityCreateWithoutParticipantsInput!]
  connect: [ActivityWhereUniqueInput!]
  disconnect: [ActivityWhereUniqueInput!]
  delete: [ActivityWhereUniqueInput!]
  update: [ActivityUpdateWithWhereUniqueWithoutParticipantsInput!]
  upsert: [ActivityUpsertWithWhereUniqueWithoutParticipantsInput!]
}

input ActivityUpdateOneWithoutTasksInput {
  create: ActivityCreateWithoutTasksInput
  connect: ActivityWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: ActivityUpdateWithoutTasksDataInput
  upsert: ActivityUpsertWithoutTasksInput
}

input ActivityUpdateWithoutCreatorDataInput {
  title: String
  desc: String
  type: ActivityType
  status: ProcessStatus
  startedAt: DateTime
  endedAt: DateTime
  location: String
  participants: UserUpdateManyWithoutAttendedActivitiesInput
  tasks: ActivityTaskUpdateManyWithoutActivityInput
}

input ActivityUpdateWithoutParticipantsDataInput {
  title: String
  desc: String
  type: ActivityType
  status: ProcessStatus
  startedAt: DateTime
  endedAt: DateTime
  location: String
  creator: UserUpdateOneWithoutMyActivitiesInput
  tasks: ActivityTaskUpdateManyWithoutActivityInput
}

input ActivityUpdateWithoutTasksDataInput {
  title: String
  desc: String
  type: ActivityType
  status: ProcessStatus
  startedAt: DateTime
  endedAt: DateTime
  location: String
  creator: UserUpdateOneWithoutMyActivitiesInput
  participants: UserUpdateManyWithoutAttendedActivitiesInput
}

input ActivityUpdateWithWhereUniqueWithoutCreatorInput {
  where: ActivityWhereUniqueInput!
  data: ActivityUpdateWithoutCreatorDataInput!
}

input ActivityUpdateWithWhereUniqueWithoutParticipantsInput {
  where: ActivityWhereUniqueInput!
  data: ActivityUpdateWithoutParticipantsDataInput!
}

input ActivityUpsertWithoutTasksInput {
  update: ActivityUpdateWithoutTasksDataInput!
  create: ActivityCreateWithoutTasksInput!
}

input ActivityUpsertWithWhereUniqueWithoutCreatorInput {
  where: ActivityWhereUniqueInput!
  update: ActivityUpdateWithoutCreatorDataInput!
  create: ActivityCreateWithoutCreatorInput!
}

input ActivityUpsertWithWhereUniqueWithoutParticipantsInput {
  where: ActivityWhereUniqueInput!
  update: ActivityUpdateWithoutParticipantsDataInput!
  create: ActivityCreateWithoutParticipantsInput!
}

input ActivityWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [ActivityWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [ActivityWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values less than the given value.
  """
  title_lt: String
  """
  All values less than or equal the given value.
  """
  title_lte: String
  """
  All values greater than the given value.
  """
  title_gt: String
  """
  All values greater than or equal the given value.
  """
  title_gte: String
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  desc: String
  """
  All values that are not equal to given value.
  """
  desc_not: String
  """
  All values that are contained in given list.
  """
  desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  desc_not_in: [String!]
  """
  All values less than the given value.
  """
  desc_lt: String
  """
  All values less than or equal the given value.
  """
  desc_lte: String
  """
  All values greater than the given value.
  """
  desc_gt: String
  """
  All values greater than or equal the given value.
  """
  desc_gte: String
  """
  All values containing the given string.
  """
  desc_contains: String
  """
  All values not containing the given string.
  """
  desc_not_contains: String
  """
  All values starting with the given string.
  """
  desc_starts_with: String
  """
  All values not starting with the given string.
  """
  desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  desc_ends_with: String
  """
  All values not ending with the given string.
  """
  desc_not_ends_with: String
  type: ActivityType
  """
  All values that are not equal to given value.
  """
  type_not: ActivityType
  """
  All values that are contained in given list.
  """
  type_in: [ActivityType!]
  """
  All values that are not contained in given list.
  """
  type_not_in: [ActivityType!]
  status: ProcessStatus
  """
  All values that are not equal to given value.
  """
  status_not: ProcessStatus
  """
  All values that are contained in given list.
  """
  status_in: [ProcessStatus!]
  """
  All values that are not contained in given list.
  """
  status_not_in: [ProcessStatus!]
  startedAt: DateTime
  """
  All values that are not equal to given value.
  """
  startedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  startedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  startedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  startedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  startedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  startedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  startedAt_gte: DateTime
  endedAt: DateTime
  """
  All values that are not equal to given value.
  """
  endedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  endedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  endedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  endedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  endedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  endedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  endedAt_gte: DateTime
  location: String
  """
  All values that are not equal to given value.
  """
  location_not: String
  """
  All values that are contained in given list.
  """
  location_in: [String!]
  """
  All values that are not contained in given list.
  """
  location_not_in: [String!]
  """
  All values less than the given value.
  """
  location_lt: String
  """
  All values less than or equal the given value.
  """
  location_lte: String
  """
  All values greater than the given value.
  """
  location_gt: String
  """
  All values greater than or equal the given value.
  """
  location_gte: String
  """
  All values containing the given string.
  """
  location_contains: String
  """
  All values not containing the given string.
  """
  location_not_contains: String
  """
  All values starting with the given string.
  """
  location_starts_with: String
  """
  All values not starting with the given string.
  """
  location_not_starts_with: String
  """
  All values ending with the given string.
  """
  location_ends_with: String
  """
  All values not ending with the given string.
  """
  location_not_ends_with: String
  creator: UserWhereInput
  participants_every: UserWhereInput
  participants_some: UserWhereInput
  participants_none: UserWhereInput
  tasks_every: ActivityTaskWhereInput
  tasks_some: ActivityTaskWhereInput
  tasks_none: ActivityTaskWhereInput
}

input ActivityWhereUniqueInput {
  id: ID
}

type AggregateActivity {
  count: Int!
}

type AggregateActivityTask {
  count: Int!
}

type AggregatePost {
  count: Int!
}

type AggregateRecipe {
  count: Int!
}

type AggregateTag {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createTag(data: TagCreateInput!): Tag!
  createPost(data: PostCreateInput!): Post!
  createUser(data: UserCreateInput!): User!
  createActivity(data: ActivityCreateInput!): Activity!
  createActivityTask(data: ActivityTaskCreateInput!): ActivityTask!
  createRecipe(data: RecipeCreateInput!): Recipe!
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  updatePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateActivity(data: ActivityUpdateInput!, where: ActivityWhereUniqueInput!): Activity
  updateActivityTask(data: ActivityTaskUpdateInput!, where: ActivityTaskWhereUniqueInput!): ActivityTask
  updateRecipe(data: RecipeUpdateInput!, where: RecipeWhereUniqueInput!): Recipe
  deleteTag(where: TagWhereUniqueInput!): Tag
  deletePost(where: PostWhereUniqueInput!): Post
  deleteUser(where: UserWhereUniqueInput!): User
  deleteActivity(where: ActivityWhereUniqueInput!): Activity
  deleteActivityTask(where: ActivityTaskWhereUniqueInput!): ActivityTask
  deleteRecipe(where: RecipeWhereUniqueInput!): Recipe
  upsertTag(where: TagWhereUniqueInput!, create: TagCreateInput!, update: TagUpdateInput!): Tag!
  upsertPost(where: PostWhereUniqueInput!, create: PostCreateInput!, update: PostUpdateInput!): Post!
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertActivity(where: ActivityWhereUniqueInput!, create: ActivityCreateInput!, update: ActivityUpdateInput!): Activity!
  upsertActivityTask(where: ActivityTaskWhereUniqueInput!, create: ActivityTaskCreateInput!, update: ActivityTaskUpdateInput!): ActivityTask!
  upsertRecipe(where: RecipeWhereUniqueInput!, create: RecipeCreateInput!, update: RecipeUpdateInput!): Recipe!
  updateManyTags(data: TagUpdateInput!, where: TagWhereInput!): BatchPayload!
  updateManyPosts(data: PostUpdateInput!, where: PostWhereInput!): BatchPayload!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput!): BatchPayload!
  updateManyActivities(data: ActivityUpdateInput!, where: ActivityWhereInput!): BatchPayload!
  updateManyActivityTasks(data: ActivityTaskUpdateInput!, where: ActivityTaskWhereInput!): BatchPayload!
  updateManyRecipes(data: RecipeUpdateInput!, where: RecipeWhereInput!): BatchPayload!
  deleteManyTags(where: TagWhereInput!): BatchPayload!
  deleteManyPosts(where: PostWhereInput!): BatchPayload!
  deleteManyUsers(where: UserWhereInput!): BatchPayload!
  deleteManyActivities(where: ActivityWhereInput!): BatchPayload!
  deleteManyActivityTasks(where: ActivityTaskWhereInput!): BatchPayload!
  deleteManyRecipes(where: RecipeWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A connection to a list of items.
"""
type PostConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [PostEdge]!
  aggregate: AggregatePost!
}

input PostCreateInput {
  isPublished: Boolean
  title: String!
  text: String!
  author: UserCreateOneWithoutPostsInput!
}

input PostCreateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
}

input PostCreateWithoutAuthorInput {
  isPublished: Boolean
  title: String!
  text: String!
}

"""
An edge in a connection.
"""
type PostEdge {
  """
  The item at the end of the edge.
  """
  node: Post!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum PostOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  isPublished_ASC
  isPublished_DESC
  title_ASC
  title_DESC
  text_ASC
  text_DESC
}

type PostPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isPublished: Boolean!
  title: String!
  text: String!
}

type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post
  updatedFields: [String!]
  previousValues: PostPreviousValues
}

input PostSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PostWhereInput
}

input PostUpdateInput {
  isPublished: Boolean
  title: String
  text: String
  author: UserUpdateOneWithoutPostsInput
}

input PostUpdateManyWithoutAuthorInput {
  create: [PostCreateWithoutAuthorInput!]
  connect: [PostWhereUniqueInput!]
  disconnect: [PostWhereUniqueInput!]
  delete: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutAuthorInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutAuthorInput!]
}

input PostUpdateWithoutAuthorDataInput {
  isPublished: Boolean
  title: String
  text: String
}

input PostUpdateWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  data: PostUpdateWithoutAuthorDataInput!
}

input PostUpsertWithWhereUniqueWithoutAuthorInput {
  where: PostWhereUniqueInput!
  update: PostUpdateWithoutAuthorDataInput!
  create: PostCreateWithoutAuthorInput!
}

input PostWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [PostWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [PostWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  isPublished: Boolean
  """
  All values that are not equal to given value.
  """
  isPublished_not: Boolean
  title: String
  """
  All values that are not equal to given value.
  """
  title_not: String
  """
  All values that are contained in given list.
  """
  title_in: [String!]
  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]
  """
  All values less than the given value.
  """
  title_lt: String
  """
  All values less than or equal the given value.
  """
  title_lte: String
  """
  All values greater than the given value.
  """
  title_gt: String
  """
  All values greater than or equal the given value.
  """
  title_gte: String
  """
  All values containing the given string.
  """
  title_contains: String
  """
  All values not containing the given string.
  """
  title_not_contains: String
  """
  All values starting with the given string.
  """
  title_starts_with: String
  """
  All values not starting with the given string.
  """
  title_not_starts_with: String
  """
  All values ending with the given string.
  """
  title_ends_with: String
  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  text: String
  """
  All values that are not equal to given value.
  """
  text_not: String
  """
  All values that are contained in given list.
  """
  text_in: [String!]
  """
  All values that are not contained in given list.
  """
  text_not_in: [String!]
  """
  All values less than the given value.
  """
  text_lt: String
  """
  All values less than or equal the given value.
  """
  text_lte: String
  """
  All values greater than the given value.
  """
  text_gt: String
  """
  All values greater than or equal the given value.
  """
  text_gte: String
  """
  All values containing the given string.
  """
  text_contains: String
  """
  All values not containing the given string.
  """
  text_not_contains: String
  """
  All values starting with the given string.
  """
  text_starts_with: String
  """
  All values not starting with the given string.
  """
  text_not_starts_with: String
  """
  All values ending with the given string.
  """
  text_ends_with: String
  """
  All values not ending with the given string.
  """
  text_not_ends_with: String
  author: UserWhereInput
}

input PostWhereUniqueInput {
  id: ID
}

enum ProcessStatus {
  INIT
  PENDING
  DONE
  STOP
}

type Query {
  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  posts(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Post]!
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  activities(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Activity]!
  activityTasks(where: ActivityTaskWhereInput, orderBy: ActivityTaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ActivityTask]!
  recipes(where: RecipeWhereInput, orderBy: RecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Recipe]!
  tag(where: TagWhereUniqueInput!): Tag
  post(where: PostWhereUniqueInput!): Post
  user(where: UserWhereUniqueInput!): User
  activity(where: ActivityWhereUniqueInput!): Activity
  activityTask(where: ActivityTaskWhereUniqueInput!): ActivityTask
  recipe(where: RecipeWhereUniqueInput!): Recipe
  tagsConnection(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): TagConnection!
  postsConnection(where: PostWhereInput, orderBy: PostOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PostConnection!
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  activitiesConnection(where: ActivityWhereInput, orderBy: ActivityOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ActivityConnection!
  activityTasksConnection(where: ActivityTaskWhereInput, orderBy: ActivityTaskOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): ActivityTaskConnection!
  recipesConnection(where: RecipeWhereInput, orderBy: RecipeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): RecipeConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

"""
A connection to a list of items.
"""
type RecipeConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [RecipeEdge]!
  aggregate: AggregateRecipe!
}

input RecipeCreateInput {
  name: String!
  time: Int
  desc: String
  avatar: String
  tags: TagCreateManyWithoutRecipesInput
  creator: UserCreateOneWithoutMyRecipesInput!
}

input RecipeCreateManyWithoutCreatorInput {
  create: [RecipeCreateWithoutCreatorInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateManyWithoutTagsInput {
  create: [RecipeCreateWithoutTagsInput!]
  connect: [RecipeWhereUniqueInput!]
}

input RecipeCreateWithoutCreatorInput {
  name: String!
  time: Int
  desc: String
  avatar: String
  tags: TagCreateManyWithoutRecipesInput
}

input RecipeCreateWithoutTagsInput {
  name: String!
  time: Int
  desc: String
  avatar: String
  creator: UserCreateOneWithoutMyRecipesInput!
}

"""
An edge in a connection.
"""
type RecipeEdge {
  """
  The item at the end of the edge.
  """
  node: Recipe!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum RecipeOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  time_ASC
  time_DESC
  desc_ASC
  desc_DESC
  avatar_ASC
  avatar_DESC
}

type RecipePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String!
  time: Int
  desc: String
  avatar: String
}

type RecipeSubscriptionPayload {
  mutation: MutationType!
  node: Recipe
  updatedFields: [String!]
  previousValues: RecipePreviousValues
}

input RecipeSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [RecipeSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RecipeSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: RecipeWhereInput
}

input RecipeUpdateInput {
  name: String
  time: Int
  desc: String
  avatar: String
  tags: TagUpdateManyWithoutRecipesInput
  creator: UserUpdateOneWithoutMyRecipesInput
}

input RecipeUpdateManyWithoutCreatorInput {
  create: [RecipeCreateWithoutCreatorInput!]
  connect: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutCreatorInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutCreatorInput!]
}

input RecipeUpdateManyWithoutTagsInput {
  create: [RecipeCreateWithoutTagsInput!]
  connect: [RecipeWhereUniqueInput!]
  disconnect: [RecipeWhereUniqueInput!]
  delete: [RecipeWhereUniqueInput!]
  update: [RecipeUpdateWithWhereUniqueWithoutTagsInput!]
  upsert: [RecipeUpsertWithWhereUniqueWithoutTagsInput!]
}

input RecipeUpdateWithoutCreatorDataInput {
  name: String
  time: Int
  desc: String
  avatar: String
  tags: TagUpdateManyWithoutRecipesInput
}

input RecipeUpdateWithoutTagsDataInput {
  name: String
  time: Int
  desc: String
  avatar: String
  creator: UserUpdateOneWithoutMyRecipesInput
}

input RecipeUpdateWithWhereUniqueWithoutCreatorInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutCreatorDataInput!
}

input RecipeUpdateWithWhereUniqueWithoutTagsInput {
  where: RecipeWhereUniqueInput!
  data: RecipeUpdateWithoutTagsDataInput!
}

input RecipeUpsertWithWhereUniqueWithoutCreatorInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutCreatorDataInput!
  create: RecipeCreateWithoutCreatorInput!
}

input RecipeUpsertWithWhereUniqueWithoutTagsInput {
  where: RecipeWhereUniqueInput!
  update: RecipeUpdateWithoutTagsDataInput!
  create: RecipeCreateWithoutTagsInput!
}

input RecipeWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [RecipeWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [RecipeWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  time: Int
  """
  All values that are not equal to given value.
  """
  time_not: Int
  """
  All values that are contained in given list.
  """
  time_in: [Int!]
  """
  All values that are not contained in given list.
  """
  time_not_in: [Int!]
  """
  All values less than the given value.
  """
  time_lt: Int
  """
  All values less than or equal the given value.
  """
  time_lte: Int
  """
  All values greater than the given value.
  """
  time_gt: Int
  """
  All values greater than or equal the given value.
  """
  time_gte: Int
  desc: String
  """
  All values that are not equal to given value.
  """
  desc_not: String
  """
  All values that are contained in given list.
  """
  desc_in: [String!]
  """
  All values that are not contained in given list.
  """
  desc_not_in: [String!]
  """
  All values less than the given value.
  """
  desc_lt: String
  """
  All values less than or equal the given value.
  """
  desc_lte: String
  """
  All values greater than the given value.
  """
  desc_gt: String
  """
  All values greater than or equal the given value.
  """
  desc_gte: String
  """
  All values containing the given string.
  """
  desc_contains: String
  """
  All values not containing the given string.
  """
  desc_not_contains: String
  """
  All values starting with the given string.
  """
  desc_starts_with: String
  """
  All values not starting with the given string.
  """
  desc_not_starts_with: String
  """
  All values ending with the given string.
  """
  desc_ends_with: String
  """
  All values not ending with the given string.
  """
  desc_not_ends_with: String
  avatar: String
  """
  All values that are not equal to given value.
  """
  avatar_not: String
  """
  All values that are contained in given list.
  """
  avatar_in: [String!]
  """
  All values that are not contained in given list.
  """
  avatar_not_in: [String!]
  """
  All values less than the given value.
  """
  avatar_lt: String
  """
  All values less than or equal the given value.
  """
  avatar_lte: String
  """
  All values greater than the given value.
  """
  avatar_gt: String
  """
  All values greater than or equal the given value.
  """
  avatar_gte: String
  """
  All values containing the given string.
  """
  avatar_contains: String
  """
  All values not containing the given string.
  """
  avatar_not_contains: String
  """
  All values starting with the given string.
  """
  avatar_starts_with: String
  """
  All values not starting with the given string.
  """
  avatar_not_starts_with: String
  """
  All values ending with the given string.
  """
  avatar_ends_with: String
  """
  All values not ending with the given string.
  """
  avatar_not_ends_with: String
  tags_every: TagWhereInput
  tags_some: TagWhereInput
  tags_none: TagWhereInput
  creator: UserWhereInput
}

input RecipeWhereUniqueInput {
  id: ID
}

type Subscription {
  tag(where: TagSubscriptionWhereInput): TagSubscriptionPayload
  post(where: PostSubscriptionWhereInput): PostSubscriptionPayload
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  activity(where: ActivitySubscriptionWhereInput): ActivitySubscriptionPayload
  activityTask(where: ActivityTaskSubscriptionWhereInput): ActivityTaskSubscriptionPayload
  recipe(where: RecipeSubscriptionWhereInput): RecipeSubscriptionPayload
}

enum TagCategory {
  DEFAULT
  RECIPE
}

"""
A connection to a list of items.
"""
type TagConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [TagEdge]!
  aggregate: AggregateTag!
}

input TagCreateInput {
  name: String!
  category: TagCategory
  default: Boolean
  creator: UserCreateOneWithoutMyTagsInput!
  recipes: RecipeCreateManyWithoutTagsInput
}

input TagCreateManyWithoutCreatorInput {
  create: [TagCreateWithoutCreatorInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateManyWithoutRecipesInput {
  create: [TagCreateWithoutRecipesInput!]
  connect: [TagWhereUniqueInput!]
}

input TagCreateWithoutCreatorInput {
  name: String!
  category: TagCategory
  default: Boolean
  recipes: RecipeCreateManyWithoutTagsInput
}

input TagCreateWithoutRecipesInput {
  name: String!
  category: TagCategory
  default: Boolean
  creator: UserCreateOneWithoutMyTagsInput!
}

"""
An edge in a connection.
"""
type TagEdge {
  """
  The item at the end of the edge.
  """
  node: Tag!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum TagOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  category_ASC
  category_DESC
  default_ASC
  default_DESC
}

type TagPreviousValues {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  category: TagCategory!
  default: Boolean
}

type TagSubscriptionPayload {
  mutation: MutationType!
  node: Tag
  updatedFields: [String!]
  previousValues: TagPreviousValues
}

input TagSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TagSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TagSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: TagWhereInput
}

input TagUpdateInput {
  name: String
  category: TagCategory
  default: Boolean
  creator: UserUpdateOneWithoutMyTagsInput
  recipes: RecipeUpdateManyWithoutTagsInput
}

input TagUpdateManyWithoutCreatorInput {
  create: [TagCreateWithoutCreatorInput!]
  connect: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutCreatorInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutCreatorInput!]
}

input TagUpdateManyWithoutRecipesInput {
  create: [TagCreateWithoutRecipesInput!]
  connect: [TagWhereUniqueInput!]
  disconnect: [TagWhereUniqueInput!]
  delete: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutRecipesInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutRecipesInput!]
}

input TagUpdateWithoutCreatorDataInput {
  name: String
  category: TagCategory
  default: Boolean
  recipes: RecipeUpdateManyWithoutTagsInput
}

input TagUpdateWithoutRecipesDataInput {
  name: String
  category: TagCategory
  default: Boolean
  creator: UserUpdateOneWithoutMyTagsInput
}

input TagUpdateWithWhereUniqueWithoutCreatorInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutCreatorDataInput!
}

input TagUpdateWithWhereUniqueWithoutRecipesInput {
  where: TagWhereUniqueInput!
  data: TagUpdateWithoutRecipesDataInput!
}

input TagUpsertWithWhereUniqueWithoutCreatorInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutCreatorDataInput!
  create: TagCreateWithoutCreatorInput!
}

input TagUpsertWithWhereUniqueWithoutRecipesInput {
  where: TagWhereUniqueInput!
  update: TagUpdateWithoutRecipesDataInput!
  create: TagCreateWithoutRecipesInput!
}

input TagWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [TagWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [TagWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  category: TagCategory
  """
  All values that are not equal to given value.
  """
  category_not: TagCategory
  """
  All values that are contained in given list.
  """
  category_in: [TagCategory!]
  """
  All values that are not contained in given list.
  """
  category_not_in: [TagCategory!]
  default: Boolean
  """
  All values that are not equal to given value.
  """
  default_not: Boolean
  creator: UserWhereInput
  recipes_every: RecipeWhereInput
  recipes_some: RecipeWhereInput
  recipes_none: RecipeWhereInput
}

input TagWhereUniqueInput {
  id: ID
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  email: String!
  password: String!
  name: String!
  avatar: String
  posts: PostCreateManyWithoutAuthorInput
  myActivities: ActivityCreateManyWithoutCreatorInput
  myTasks: ActivityTaskCreateManyWithoutAssigneeInput
  myRecipes: RecipeCreateManyWithoutCreatorInput
  myTags: TagCreateManyWithoutCreatorInput
  attendedActivities: ActivityCreateManyWithoutParticipantsInput
}

input UserCreateManyWithoutAttendedActivitiesInput {
  create: [UserCreateWithoutAttendedActivitiesInput!]
  connect: [UserWhereUniqueInput!]
}

input UserCreateOneWithoutMyActivitiesInput {
  create: UserCreateWithoutMyActivitiesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMyRecipesInput {
  create: UserCreateWithoutMyRecipesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMyTagsInput {
  create: UserCreateWithoutMyTagsInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutMyTasksInput {
  create: UserCreateWithoutMyTasksInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAttendedActivitiesInput {
  email: String!
  password: String!
  name: String!
  avatar: String
  posts: PostCreateManyWithoutAuthorInput
  myActivities: ActivityCreateManyWithoutCreatorInput
  myTasks: ActivityTaskCreateManyWithoutAssigneeInput
  myRecipes: RecipeCreateManyWithoutCreatorInput
  myTags: TagCreateManyWithoutCreatorInput
}

input UserCreateWithoutMyActivitiesInput {
  email: String!
  password: String!
  name: String!
  avatar: String
  posts: PostCreateManyWithoutAuthorInput
  myTasks: ActivityTaskCreateManyWithoutAssigneeInput
  myRecipes: RecipeCreateManyWithoutCreatorInput
  myTags: TagCreateManyWithoutCreatorInput
  attendedActivities: ActivityCreateManyWithoutParticipantsInput
}

input UserCreateWithoutMyRecipesInput {
  email: String!
  password: String!
  name: String!
  avatar: String
  posts: PostCreateManyWithoutAuthorInput
  myActivities: ActivityCreateManyWithoutCreatorInput
  myTasks: ActivityTaskCreateManyWithoutAssigneeInput
  myTags: TagCreateManyWithoutCreatorInput
  attendedActivities: ActivityCreateManyWithoutParticipantsInput
}

input UserCreateWithoutMyTagsInput {
  email: String!
  password: String!
  name: String!
  avatar: String
  posts: PostCreateManyWithoutAuthorInput
  myActivities: ActivityCreateManyWithoutCreatorInput
  myTasks: ActivityTaskCreateManyWithoutAssigneeInput
  myRecipes: RecipeCreateManyWithoutCreatorInput
  attendedActivities: ActivityCreateManyWithoutParticipantsInput
}

input UserCreateWithoutMyTasksInput {
  email: String!
  password: String!
  name: String!
  avatar: String
  posts: PostCreateManyWithoutAuthorInput
  myActivities: ActivityCreateManyWithoutCreatorInput
  myRecipes: RecipeCreateManyWithoutCreatorInput
  myTags: TagCreateManyWithoutCreatorInput
  attendedActivities: ActivityCreateManyWithoutParticipantsInput
}

input UserCreateWithoutPostsInput {
  email: String!
  password: String!
  name: String!
  avatar: String
  myActivities: ActivityCreateManyWithoutCreatorInput
  myTasks: ActivityTaskCreateManyWithoutAssigneeInput
  myRecipes: RecipeCreateManyWithoutCreatorInput
  myTags: TagCreateManyWithoutCreatorInput
  attendedActivities: ActivityCreateManyWithoutParticipantsInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  password_ASC
  password_DESC
  name_ASC
  name_DESC
  avatar_ASC
  avatar_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  password: String!
  name: String!
  avatar: String
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  password: String
  name: String
  avatar: String
  posts: PostUpdateManyWithoutAuthorInput
  myActivities: ActivityUpdateManyWithoutCreatorInput
  myTasks: ActivityTaskUpdateManyWithoutAssigneeInput
  myRecipes: RecipeUpdateManyWithoutCreatorInput
  myTags: TagUpdateManyWithoutCreatorInput
  attendedActivities: ActivityUpdateManyWithoutParticipantsInput
}

input UserUpdateManyWithoutAttendedActivitiesInput {
  create: [UserCreateWithoutAttendedActivitiesInput!]
  connect: [UserWhereUniqueInput!]
  disconnect: [UserWhereUniqueInput!]
  delete: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutAttendedActivitiesInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutAttendedActivitiesInput!]
}

input UserUpdateOneWithoutMyActivitiesInput {
  create: UserCreateWithoutMyActivitiesInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutMyActivitiesDataInput
  upsert: UserUpsertWithoutMyActivitiesInput
}

input UserUpdateOneWithoutMyRecipesInput {
  create: UserCreateWithoutMyRecipesInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutMyRecipesDataInput
  upsert: UserUpsertWithoutMyRecipesInput
}

input UserUpdateOneWithoutMyTagsInput {
  create: UserCreateWithoutMyTagsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutMyTagsDataInput
  upsert: UserUpsertWithoutMyTagsInput
}

input UserUpdateOneWithoutMyTasksInput {
  create: UserCreateWithoutMyTasksInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutMyTasksDataInput
  upsert: UserUpsertWithoutMyTasksInput
}

input UserUpdateOneWithoutPostsInput {
  create: UserCreateWithoutPostsInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: UserUpdateWithoutPostsDataInput
  upsert: UserUpsertWithoutPostsInput
}

input UserUpdateWithoutAttendedActivitiesDataInput {
  email: String
  password: String
  name: String
  avatar: String
  posts: PostUpdateManyWithoutAuthorInput
  myActivities: ActivityUpdateManyWithoutCreatorInput
  myTasks: ActivityTaskUpdateManyWithoutAssigneeInput
  myRecipes: RecipeUpdateManyWithoutCreatorInput
  myTags: TagUpdateManyWithoutCreatorInput
}

input UserUpdateWithoutMyActivitiesDataInput {
  email: String
  password: String
  name: String
  avatar: String
  posts: PostUpdateManyWithoutAuthorInput
  myTasks: ActivityTaskUpdateManyWithoutAssigneeInput
  myRecipes: RecipeUpdateManyWithoutCreatorInput
  myTags: TagUpdateManyWithoutCreatorInput
  attendedActivities: ActivityUpdateManyWithoutParticipantsInput
}

input UserUpdateWithoutMyRecipesDataInput {
  email: String
  password: String
  name: String
  avatar: String
  posts: PostUpdateManyWithoutAuthorInput
  myActivities: ActivityUpdateManyWithoutCreatorInput
  myTasks: ActivityTaskUpdateManyWithoutAssigneeInput
  myTags: TagUpdateManyWithoutCreatorInput
  attendedActivities: ActivityUpdateManyWithoutParticipantsInput
}

input UserUpdateWithoutMyTagsDataInput {
  email: String
  password: String
  name: String
  avatar: String
  posts: PostUpdateManyWithoutAuthorInput
  myActivities: ActivityUpdateManyWithoutCreatorInput
  myTasks: ActivityTaskUpdateManyWithoutAssigneeInput
  myRecipes: RecipeUpdateManyWithoutCreatorInput
  attendedActivities: ActivityUpdateManyWithoutParticipantsInput
}

input UserUpdateWithoutMyTasksDataInput {
  email: String
  password: String
  name: String
  avatar: String
  posts: PostUpdateManyWithoutAuthorInput
  myActivities: ActivityUpdateManyWithoutCreatorInput
  myRecipes: RecipeUpdateManyWithoutCreatorInput
  myTags: TagUpdateManyWithoutCreatorInput
  attendedActivities: ActivityUpdateManyWithoutParticipantsInput
}

input UserUpdateWithoutPostsDataInput {
  email: String
  password: String
  name: String
  avatar: String
  myActivities: ActivityUpdateManyWithoutCreatorInput
  myTasks: ActivityTaskUpdateManyWithoutAssigneeInput
  myRecipes: RecipeUpdateManyWithoutCreatorInput
  myTags: TagUpdateManyWithoutCreatorInput
  attendedActivities: ActivityUpdateManyWithoutParticipantsInput
}

input UserUpdateWithWhereUniqueWithoutAttendedActivitiesInput {
  where: UserWhereUniqueInput!
  data: UserUpdateWithoutAttendedActivitiesDataInput!
}

input UserUpsertWithoutMyActivitiesInput {
  update: UserUpdateWithoutMyActivitiesDataInput!
  create: UserCreateWithoutMyActivitiesInput!
}

input UserUpsertWithoutMyRecipesInput {
  update: UserUpdateWithoutMyRecipesDataInput!
  create: UserCreateWithoutMyRecipesInput!
}

input UserUpsertWithoutMyTagsInput {
  update: UserUpdateWithoutMyTagsDataInput!
  create: UserCreateWithoutMyTagsInput!
}

input UserUpsertWithoutMyTasksInput {
  update: UserUpdateWithoutMyTasksDataInput!
  create: UserCreateWithoutMyTasksInput!
}

input UserUpsertWithoutPostsInput {
  update: UserUpdateWithoutPostsDataInput!
  create: UserCreateWithoutPostsInput!
}

input UserUpsertWithWhereUniqueWithoutAttendedActivitiesInput {
  where: UserWhereUniqueInput!
  update: UserUpdateWithoutAttendedActivitiesDataInput!
  create: UserCreateWithoutAttendedActivitiesInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  password: String
  """
  All values that are not equal to given value.
  """
  password_not: String
  """
  All values that are contained in given list.
  """
  password_in: [String!]
  """
  All values that are not contained in given list.
  """
  password_not_in: [String!]
  """
  All values less than the given value.
  """
  password_lt: String
  """
  All values less than or equal the given value.
  """
  password_lte: String
  """
  All values greater than the given value.
  """
  password_gt: String
  """
  All values greater than or equal the given value.
  """
  password_gte: String
  """
  All values containing the given string.
  """
  password_contains: String
  """
  All values not containing the given string.
  """
  password_not_contains: String
  """
  All values starting with the given string.
  """
  password_starts_with: String
  """
  All values not starting with the given string.
  """
  password_not_starts_with: String
  """
  All values ending with the given string.
  """
  password_ends_with: String
  """
  All values not ending with the given string.
  """
  password_not_ends_with: String
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  avatar: String
  """
  All values that are not equal to given value.
  """
  avatar_not: String
  """
  All values that are contained in given list.
  """
  avatar_in: [String!]
  """
  All values that are not contained in given list.
  """
  avatar_not_in: [String!]
  """
  All values less than the given value.
  """
  avatar_lt: String
  """
  All values less than or equal the given value.
  """
  avatar_lte: String
  """
  All values greater than the given value.
  """
  avatar_gt: String
  """
  All values greater than or equal the given value.
  """
  avatar_gte: String
  """
  All values containing the given string.
  """
  avatar_contains: String
  """
  All values not containing the given string.
  """
  avatar_not_contains: String
  """
  All values starting with the given string.
  """
  avatar_starts_with: String
  """
  All values not starting with the given string.
  """
  avatar_not_starts_with: String
  """
  All values ending with the given string.
  """
  avatar_ends_with: String
  """
  All values not ending with the given string.
  """
  avatar_not_ends_with: String
  posts_every: PostWhereInput
  posts_some: PostWhereInput
  posts_none: PostWhereInput
  myActivities_every: ActivityWhereInput
  myActivities_some: ActivityWhereInput
  myActivities_none: ActivityWhereInput
  myTasks_every: ActivityTaskWhereInput
  myTasks_some: ActivityTaskWhereInput
  myTasks_none: ActivityTaskWhereInput
  myRecipes_every: RecipeWhereInput
  myRecipes_some: RecipeWhereInput
  myRecipes_none: RecipeWhereInput
  myTags_every: TagWhereInput
  myTags_some: TagWhereInput
  myTags_none: TagWhereInput
  attendedActivities_every: ActivityWhereInput
  attendedActivities_some: ActivityWhereInput
  attendedActivities_none: ActivityWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
