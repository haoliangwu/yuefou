# import * from "./generated/prisma.graphql"
# import * from "./input.graphql"
# import * from "./model.graphql"
# import * from "./payload.graphql"

# this is needed for upload to work
scalar Upload

type Query {
  # user
  me: User!
  # activity
  activities: [Activity!]!
  activitiesConnection(pagination: ForwardPaginationInput): ActivityConnection!
  activity(id: ID!): Activity
  # task
  tasks: [ActivityTask!]!
  tasksConnection(pagination: ForwardPaginationInput): ActivityTaskConnection
  task(id: ID!): Activity
}

type Mutation {
  # auth
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  # user
  updateUser(user: UpdateUserInput!): User!
  uploadAvatar(file: Upload!): User!
  # activity
  createActivity(activity: CreateActivityInput!): Activity!
  updateActivity(activity: UpdateActivityInput!): Activity!
  deleteActivity(id: ID!): Activity!
  attendActivity(id: ID!): Activity!
  quitActivity(id: ID!): Activity!
  # task
  createTask(id: ID!, task: CreateTaskInput!): ActivityTask!
  updateTask(id: ID!, task: UpdateTaskInput!): ActivityTask!
  updateTaskStatus(id: ID!, taskId: ID!, status: ProcessStatus!): ActivityTask!
  deleteTask(id: ID!, taskId: ID!): ActivityTask!
  assignTask(id: ID!, taskId: ID!, assigneeId: ID): ActivityTask!
  # upload
  singleUpload (file: Upload!): File!
  multipleUpload (files: [Upload!]!): [File!]!
}

type Subscription {
  # task
  updatedTask: ActivityTaskSubscriptionPayload
}