# import Post, Activity, ActivityType, ActivityTask from "./generated/prisma.graphql"
# import CreateActivityInput from "./input.graphql"

# this is needed for upload to work
scalar Upload

type Query {
  me: User
  activities: [Activity!]!
  activity(id: String): Activity
}

type Mutation {
  # auth
  signup(email: String!, password: String!, name: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  # activity
  createActivity(activity: CreateActivityInput): Activity!
  updateActivity(activity: UpdateActivityInput): Activity!
  deleteActivity(id: ID!): Activity
  attendActivity(id: ID!): Activity!
  quitActivity(id: ID!): Activity!
  # task
  # createTask(task: CreateTaskInput): ActivityTask!
  # upload
  singleUpload (file: Upload!): File!
  multipleUpload (files: [Upload!]!): [File!]!
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID! 
  email: String! 
  name: String!
  posts: [Post!]!
  myActivities: [Activity!]!
  myTasks: [ActivityTask!]!
  attendedActivities: [Activity!]!
}

type File {
  id: ID!
  path: String!
  filename: String!
  mimetype: String!
  encoding: String!
}
